/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/NewRegistrationVerifier.sol/Verifier";

const _abi = [
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506114fa8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a07d99a1461004657806344f636921461005b578063a670860414610084575b600080fd5b610059610054366004611385565b610097565b005b61006e6100693660046113bc565b610317565b60405161007b91906113e0565b60405180910390f35b610059610092366004611411565b610374565b6000806100a383610693565b9150915060006040516101008682377f12e3ab21a12bb72b54918437f2935027c4565d733137d4a363e6bf9a38acfd366101008201527f195022074a46a71ec1c12241c4396844ae67d67cbf1aa5b6ce641daa3b287e646101208201527f030e4e2ea23b4a1f379bce986c354f8ef4b8a16b2259b1f8494dfc1b4d3f1e7b6101408201527f1380ab11236eebb21712f75591ccd572998fe27688d8285fc5113129849c6c1c6101608201527f0d6501f147d56a359168207657d5a50131d0f4c821cdf0086d44bd2d2abcab7e6101808201527f03e293b02c1fd1a4962e9678bbcf2fffd73b0555ac888cbfd64666252203aaca6101a08201527f152e54c0ce0f3454e827abc9105fba4701ef04e46022ce62f62a0d557ac240686101c08201527f22e63a2dea765a7903eda3b2a9bf22b6ad3d3df8be0808348c18b35fba130e6f6101e08201527f2ff248b1f6886982ea0737df949ca83a2a5053ef32b87af8f243a64297af92b06102008201527f0a9f5b6a9d9aca5f74d2b0cd87c4848e723fff6c4a608ea0ccda030a000a6ce861022082015283610240820152826102608201527f1f220ba957ccf727ff7345bb9623ffacdf94d7349698383788f15f36485fb4176102808201527f058aab46ef187ede1b292fe3706f88db9df6da465d4bb79c84fa04e1bdb9c82c6102a08201527f2578a7782c601d0b383c9ffe0bfe9caa744a93b45bd253ade9c0d9d737ad241c6102c08201527f19c8c171af2a3519d1d0bbd4bc802ccfed522c35d2367f7471e62657ce299b6a6102e08201526020816103008360085afa90511690508061031057604051631ff3747d60e21b815260040160405180910390fd5b5050505050565b61031f611307565b61033282358360015b60200201356109bd565b81526103506060830135604084013560a08501356080860135610ab2565b6020830152604082015261036a60c0830135836007610328565b6060820152919050565b61037c611325565b60008061038f85825b6020020135610da9565b909250905060008080806103ab60408a013560208b0135610e4e565b929650909450925090506000806103c38b6003610385565b915091506000806103d38c610693565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f12e3ab21a12bb72b54918437f2935027c4565d733137d4a363e6bf9a38acfd366101008e01527f195022074a46a71ec1c12241c4396844ae67d67cbf1aa5b6ce641daa3b287e646101208e01527f030e4e2ea23b4a1f379bce986c354f8ef4b8a16b2259b1f8494dfc1b4d3f1e7b6101408e01527f1380ab11236eebb21712f75591ccd572998fe27688d8285fc5113129849c6c1c6101608e01527f0d6501f147d56a359168207657d5a50131d0f4c821cdf0086d44bd2d2abcab7e6101808e01527f03e293b02c1fd1a4962e9678bbcf2fffd73b0555ac888cbfd64666252203aaca6101a08e01527f152e54c0ce0f3454e827abc9105fba4701ef04e46022ce62f62a0d557ac240686101c08e01527f22e63a2dea765a7903eda3b2a9bf22b6ad3d3df8be0808348c18b35fba130e6f6101e08e01527f2ff248b1f6886982ea0737df949ca83a2a5053ef32b87af8f243a64297af92b06102008e01527f0a9f5b6a9d9aca5f74d2b0cd87c4848e723fff6c4a608ea0ccda030a000a6ce86102208e01526102408d018290526102608d018190527f1f220ba957ccf727ff7345bb9623ffacdf94d7349698383788f15f36485fb4176102808e01527f058aab46ef187ede1b292fe3706f88db9df6da465d4bb79c84fa04e1bdb9c82c6102a08e01527f2578a7782c601d0b383c9ffe0bfe9caa744a93b45bd253ade9c0d9d737ad241c6102c08e01527f19c8c171af2a3519d1d0bbd4bc802ccfed522c35d2367f7471e62657ce299b6a6102e08e015290925090506000610648611344565b6020816103008f60085afa915081158061066457508051600114155b1561068257604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050505050505050565b6000806000600190506040516040810160007f0d852d6661ae77f98e0690c9619f4fe54897d887088eb73b8b91b8d7c68d34ed83527f262a700886d6c39dd3d782108cf42019b8a7742ec6cbd4263e780d00c196800760208401527f29f46a6b2ab88739b4a751d70e2e12e7a5ccb77f70be1888eff4188c0d8d84e382527f0562fad37a70711729c763c4aea8509bb73224caa7a945c676c98cb651e152666020830152863590508060408301526000805160206114a583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f1736e37e286b8b1e7911a54945bf9cd3c5c677df497173917671de07d23c2a3182527f06d74e3a8ee0c090dca6524d8c15da20ca637c204430d90038a620a5a8c3aaad6020830152602087013590508060408301526000805160206114a583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0dd305dd63822d8ca49c249d2f4be20442fc9694a1e3974c73666d480e7652c282527f156291608771598691f87604cd5e32fc22bff62d3c06a8d16c67ebd5886d29516020830152604087013590508060408301526000805160206114a583398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f09d6cb6bdb61dcc7f282f7f306936f124dd2c44fd8c2746fcb2a3aa689b21d0282527f29030f5d25e26d33244d3c03b3c282725f153aed83bcec08534101535166a31a6020830152606087013590508060408301526000805160206114a583398151915281108416935060408260608460075afa8416935060408360808560065afa7f16a05fa60fd337bc1657c68a4449ce83837c72c3ba6572dd58aa74a5fee7728d83527f27574c4f3765529d9b7c4d5edc2d2c93d83ba7f69daeb93c533bc429c750b2346020840152608088013560408085018290526000805160206114a583398151915290911091909516169390508160608160075afa831692505060408160808360065afa815160209092015191945090925016806109b75760405163a54f8e2760e01b815260040160405180910390fd5b50915091565b6000600080516020611485833981519152831015806109ea57506000805160206114858339815191528210155b15610a0857604051631ff3747d60e21b815260040160405180910390fd5b82158015610a14575081155b15610a2157506000610aac565b6000610a60600080516020611485833981519152600360008051602061148583398151915287600080516020611485833981519152898a090908611034565b9050808303610a75575050600182901b610aac565b610a7e81611098565b8303610a91575050600182811b17610aac565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b60008060008051602061148583398151915286101580610ae057506000805160206114858339815191528510155b80610af957506000805160206114858339815191528410155b80610b1257506000805160206114858339815191528310155b15610b3057604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610b4957506000905080610da0565b60008080600080516020611485833981519152610b756003600080516020611485833981519152611463565b6000805160206114858339815191528a8c0909905060006000805160206114858339815191528a6000805160206114858339815191528c8d0909905060006000805160206114858339815191528a6000805160206114858339815191528c8d09099050600080516020611485833981519152806000805160206114858339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610c6e600080516020611485833981519152806000805160206114858339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611098565b9350505050600080610cbf60008051602061148583398151915280610c9557610c9561144d565b60008051602061148583398151915285860960008051602061148583398151915287880908611034565b9050610d0c6000805160206114858339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611485833981519152848808096110b1565b15915050610d1b8383836110fb565b90935091508683148015610d2e57508186145b15610d585780610d3f576000610d42565b60025b60ff1660028a901b176000179450879350610d9c565b610d6183611098565b87148015610d765750610d7382611098565b86145b15610a915780610d87576000610d8a565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b60008082600003610dbf57506000928392509050565b600183811c9250808416146000805160206114858339815191528310610df857604051631ff3747d60e21b815260040160405180910390fd5b610e356000805160206114858339815191526003600080516020611485833981519152866000805160206114858339815191528889090908611034565b915080156109b757610e4682611098565b915050915091565b600080808085158015610e5f575084155b15610e755750600092508291508190508061102b565b600286811c9450859350600180881614908088161460008051602061148583398151915286101580610eb557506000805160206114858339815191528510155b15610ed357604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611485833981519152610efd6003600080516020611485833981519152611463565b600080516020611485833981519152888a090990506000600080516020611485833981519152886000805160206114858339815191528a8b090990506000600080516020611485833981519152886000805160206114858339815191528a8b09099050600080516020611485833981519152806000805160206114858339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089650610ff6600080516020611485833981519152806000805160206114858339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611098565b95506110038787866110fb565b909750955084156110255761101787611098565b965061102286611098565b95505b50505050505b92959194509250565b6000611060827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611242565b9050816000805160206114858339815191528283091461109357604051631ff3747d60e21b815260040160405180910390fd5b919050565b6000805160206114858339815191529081900681030690565b6000806110de837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611242565b905082600080516020611485833981519152828309149392505050565b6000808061112d60008051602061148583398151915280878809600080516020611485833981519152898a0908611034565b905083156111415761113e81611098565b90505b61118c6000805160206114858339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611485833981519152848a0809611034565b92506000805160206114858339815191526111b8600080516020611485833981519152600286096112a7565b860991506000805160206114858339815191526111e5600080516020611485833981519152848509611098565b600080516020611485833981519152858609088614158061121b5750600080516020611485833981519152808385096002098514155b1561123957604051631ff3747d60e21b815260040160405180910390fd5b50935093915050565b600080604051602081526020808201526020604082015284606082015283608082015260008051602061148583398151915260a082015260208160c08360055afa90519250905080610aaa57604051631ff3747d60e21b815260040160405180910390fd5b60006112d3827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45611242565b905060008051602061148583398151915281830960011461109357604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b806101008101831015610aac57600080fd5b8060a08101831015610aac57600080fd5b6000806101a0838503121561139957600080fd5b6113a38484611362565b91506113b3846101008501611374565b90509250929050565b600061010082840312156113cf57600080fd5b6113d98383611362565b9392505050565b60808101818360005b60048110156114085781518352602092830192909101906001016113e9565b50505092915050565b600080610120838503121561142557600080fd5b608083018481111561143657600080fd5b8392506114438582611374565b9150509250929050565b634e487b7160e01b600052601260045260246000fd5b81810381811115610aac57634e487b7160e01b600052601160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220d6d07c8b34acb37e1404719f6c5e68b8ff7da595e2a65d50720774058d5fa2bc64736f6c634300081b0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
