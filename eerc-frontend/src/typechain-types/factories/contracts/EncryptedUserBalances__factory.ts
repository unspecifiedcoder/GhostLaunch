/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EncryptedUserBalances,
  EncryptedUserBalancesInterface,
} from "../../contracts/EncryptedUserBalances";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOfStandalone",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506104a88061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062fdd58e14610045578063a865d5b214610072578063cbf1304d14610085575b600080fd5b610058610053366004610308565b610102565b604051610069959493929190610387565b60405180910390f35b610058610080366004610431565b610257565b6100f3610093366004610308565b60006020818152928152604080822084529181528190208151608081018352815481840190815260018301546060830152815282518084019093526002820154835260038201548385015292830191909152600581015460069091015483565b60405161006993929190610453565b61010a61028a565b600060606101166102ce565b6001600160a01b03861660009081526020818152604080832088845282528083206005810154600682015483516080810185528354818601908152600185015460608301528152845180860186526002850154815260038501548188015281870152600e840180548651818902810189019097528087529496919593949093600788019392909185918a9084015b8282101561020d57600084815260209020604080516101208101825291600885020190829081018260078282826020028201915b8154815260200190600101908083116101d85750505050508152602001600782015481525050815260200190600101906101a4565b50506040805160e08101918290529396508592506007915082845b815481526020019060010190808311610228575050505050915095509550955095509550509295509295909350565b61025f61028a565b6000606061026b6102ce565b6000610278866000610102565b939a9299509097509550909350915050565b604080516080810182526000918101828152606082019290925290819081526020016102c9604051806040016040528060008152602001600081525090565b905290565b6040518060e001604052806007906020820280368337509192915050565b80356001600160a01b038116811461030357600080fd5b919050565b6000806040838503121561031b57600080fd5b610324836102ec565b946020939093013593505050565b61034782825180518252602090810151910152565b602090810151805160408401520151606090910152565b8060005b6007811015610381578151845260209384019390910190600101610362565b50505050565b60006101c082016103988389610332565b608083018790526101c060a084015285519081905260208601906101e084019060005b8181101561040c57835180518460005b60078110156103ea5782518252602092830192909101906001016103cb565b50505060209081015160e08501529390930192610100909201916001016103bb565b5050809250505061042060c083018561035e565b826101a08301529695505050505050565b60006020828403121561044357600080fd5b61044c826102ec565b9392505050565b60c081016104618286610332565b608082019390935260a0015291905056fea26469706673582212204a906a8504c1cdf54b01bc6eb1fd751657443d5a11052d6c51031b70b01f18af64736f6c634300081b0033";

type EncryptedUserBalancesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptedUserBalancesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncryptedUserBalances__factory extends ContractFactory {
  constructor(...args: EncryptedUserBalancesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EncryptedUserBalances & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EncryptedUserBalances__factory {
    return super.connect(runner) as EncryptedUserBalances__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptedUserBalancesInterface {
    return new Interface(_abi) as EncryptedUserBalancesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptedUserBalances {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EncryptedUserBalances;
  }
}
