/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  WithdrawVerifier,
  WithdrawVerifierInterface,
} from "../../../contracts/prod/WithdrawVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[16]",
        name: "_pubSignals",
        type: "uint256[16]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610ae08061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c82febf514610030575b600080fd5b61004361003e366004610a43565b610057565b604051901515815260200160405180910390f35b6000610930565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001811061008f576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100c5576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa915050806100f6576000805260206000f35b5050505050565b7f26e539ff98bbbcb0670b76196d8d8ad5e0c8156a2da38bc6c740b21bffb3654f85527f1c269cf8de6015386cf68e14b0f48c08b22ac2bc842e3a2ba4fec0c2b4a8383b60208601526000608086018661019a87357f0c103d5f707cdee1ae26747f7a3d12963792a567299f43b2311af2896529b4ab7f0acc92b91787ff4bc4f3c7cf3ca379f599d7a72e19aaecde57600a38911f679484610092565b6101ea60208801357f09be88d6d3b1d233c83e4cc1332ade5614bc4e49af1b0780110a4b757c275c0f7f2647116286b43aa75ca55efd5f53f5568cbd870724db7f3b405acba4f67ee37384610092565b61023960408801357e5445b71e11eb1760648665444e84d53f00e776b1a53692d89e3ad636c961f07f18159475473052b89eb5ef006c22ba46c75a03e456d6928cff93947c3088d03584610092565b61028960608801357f2ea14ea8a5bd58079763159cb44f8f9d444869f21f06cb1a33a95dbbe9524a847f17d2d0f5e7ee8c36e90f17259cacff67ea56c22ef6f7119f530da2e3b81334ad84610092565b6102d960808801357f1fe3a9d5f6e9b7a855bff9d81ed224d1aa1a6111701aa836135e6106cb2161377f073f2c08f49973c0db64b66e636c102787575875b57e4ceaa76594336b1dc15c84610092565b61032960a08801357f1a626fbc53747bc655263434d8c73a902453be2ce137c0910fe5637387b48a797f23fe01b39acbf602508ca71087da4055956c3cf00f362111fc33d53622afc5e984610092565b61037960c08801357f185ec70f0b65bddb6c8c99044e1bc76563532724c6095e8efa5360694825c3a27f0b3628aecdf053d7020609aab9c555b9213443adab3ffb4bb467beeb2b41c88784610092565b6103c960e08801357f169ad376dd1158b2ef2ced06904219d010fbe28f9881b18b3a94347a74a897a27f2a4c343301b53f01644bf3133086333139dc6282e716812bbeb774bc13d8c8c784610092565b61041a6101008801357f0d5ed85bacbe3a63a113c122bd01fdd47173f7b8f770f9eaf0cfef3dbd8459977f13eed02222100d028de51aab907f9da64e23b0fecbf8571f120e387636b0f2a384610092565b61046b6101208801357f24438aaa9ab23c37f93b97ac42d33de9c7ae02abe260886004fb163904dfa1ba7f1f66d97fd1383d73b178558cafad70bed6dce8e87ef3fdb148d6846a4e65d6cf84610092565b6104bc6101408801357f27ddd7d2f308b7febda9e50efaf9139c24fcb2822bd1098e872d229e3032262b7f2d6d39043c0980941338c14b225f68dab29da322efab86b14e93120df5dcefda84610092565b61050c6101608801357f1493a3b5fcb3df4f4a05ea74c887b80c60ac555ac6d156b46a776f5e442b23f57e540393d1b728ae2dddb645362fc1b845c7ea39b78dde9f7810089b9c88239a84610092565b61055d6101808801357f22206c45a79fd38c1b58fdd4a719921628421ad6a0e7b8fcab290f16c40a14b07f301808b9fbb075d582b548254191635a2ebec08a723180190a933f3e8e3a0d9884610092565b6105ae6101a08801357f027f69b40af5867bfd8d3dffd0466171df492487e5d3fb0541b102664a66e3517f2264db71780c78ef47582ae6454cda3dbf2d7b5d80ba03b27ddf048f32f7e10f84610092565b6105ff6101c08801357f0dbedc5e12f5281210fadbf99fac6d776f23544cda2169da6af1519bd0c11e447f1db80861a88289979721a4ea162464b766cd1a160ead4e1ac0d6da83a9d50b0f84610092565b6106506101e08801357f0c23267f982309d5d0f037605237df9ec563d6395f252162f1e99c9ac20c63377f1eef7b4fda810d773aa8ddfcb52878c95b1b1c5fff388e1a7c57f37cdf64482f84610092565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f27a8215ae2597206ec39d747ab93ea7aaa806596c0c66797300e668627d1e6e76102808201527f1431e2254379867c913b36cf7b5e80623bccc73f5fa44402abd90ed8bdf2b49f6102a08201527f3043ab94a78e4de50285fb3f939c6fff8a402fc4ec8c128a771f3cdde57b75776102c08201527f1dfad40f9b54b39ad5c9a0267b57347586df7064b709a2bbed98eea8290ef1bb6102e08201526020816103008360086107d05a03fa9051169695505050505050565b6040516103808101604052610948600084013561005e565b610955602084013561005e565b610962604084013561005e565b61096f606084013561005e565b61097c608084013561005e565b61098960a084013561005e565b61099660c084013561005e565b6109a360e084013561005e565b6109b161010084013561005e565b6109bf61012084013561005e565b6109cd61014084013561005e565b6109db61016084013561005e565b6109e961018084013561005e565b6109f76101a084013561005e565b610a056101c084013561005e565b610a136101e084013561005e565b610a20818486888a6100fd565b90508060005260206000f35b8060408101831015610a3d57600080fd5b92915050565b6000806000806103008587031215610a5a57600080fd5b610a648686610a2c565b935060c0850186811115610a7757600080fd5b604086019350610a878782610a2c565b9250508561030086011115610a9b57600080fd5b5091949093509091610100019056fea264697066735822122043b00b7d189bb2710eb243e69d3a1fbddb76986bedd47810030779ff61651fb264736f6c634300081b0033";

type WithdrawVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawVerifier__factory extends ContractFactory {
  constructor(...args: WithdrawVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WithdrawVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WithdrawVerifier__factory {
    return super.connect(runner) as WithdrawVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawVerifierInterface {
    return new Interface(_abi) as WithdrawVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WithdrawVerifier {
    return new Contract(address, _abi, runner) as unknown as WithdrawVerifier;
  }
}
