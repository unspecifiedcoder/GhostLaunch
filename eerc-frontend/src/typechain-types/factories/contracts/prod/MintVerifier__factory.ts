/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MintVerifier,
  MintVerifierInterface,
} from "../../../contracts/prod/MintVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[24]",
        name: "_pubSignals",
        type: "uint256[24]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610dd88061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634d01c5a014610030575b600080fd5b61004361003e366004610d3b565b610057565b604051901515815260200160405180910390f35b6000610bb8565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001811061008f576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100c5576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa915050806100f6576000805260206000f35b5050505050565b7f1660cb6f46896e4a26c4e10c0e1cd83a36d4524a18883008ab4820ce4035e76385527f0e23819dbe544e4eef2ba90baf05052e01346100615d2f1eb4389d0fa8467ae260208601526000608086018661019a87357f14c15a03f789a78f4a7905e01dad3a3f6f98f963568f5c8cde2b4e48c5ea20f77f0c59fee267aa8005ced7734a590e95422026d6f4b36b724599d3b053ef6d83c384610092565b6101ea60208801357f07b31d3d89ba21bdaf376f1f739b3608d372345447a29f5a3705282fc3fcc4917f2aef93881c2dc3eaa42c2640f418591d8aacdc383c6b06688d5bd96d430d128f84610092565b61023a60408801357f1ae026c0599b1a9a709f240c46f449ad2fe995775550a45e18835932bd71fd617f2fe76200b1ee9dbb795a42bc9ddd5c85b829d46fdaae050f4a6a5cca945cb4aa84610092565b61028a60608801357f085eaa09c8ae7d24bc814123a9c44391eb5f8a407d47e4b0336c158ef6e443887f253483399961a54479888bd619a7f8763aaec837e423f0fc87fb87874a5caa8384610092565b6102da60808801357f2078a5d9f938b2ea67e4f636be9e685121d03a4d3cbc8b011831e7d7fc6573367f2ef7dc19472f4c5a11b7b26fc2a118e4417618e7c7f18391c05a202bcf0c1b8c84610092565b61032a60a08801357f085a38ade53fa5e091e072e566c400ac5b151f64bf819ea772d5109dd6566cdd7f2f527ced9fdf4d4852ff9d25ed3aa213fa5a1f6cd293bb538721e9620dbaef6984610092565b61037a60c08801357f24237dda85a0741345683f9001739d0e4b5c6f6b61b7bfd0102cc934a947edae7f0c7ac804d9b9bea28c49bbc545a4ae26b1a3c1d8f23577120e77f6095ee394a784610092565b6103ca60e08801357f2a9db361d4314094878b3c10bdac537954f27f7854e6e1f084450130bd8a8af87f24af836781114c83725edadda0aae456b73adb0cd7cdd0ab7e0cb2c46256a27684610092565b61041b6101008801357f1bd03c1b7c02b082329f20674a684cd95cc0c481905140eb0d7d8b6e125819de7f288b4cb73b78d003b31c475b5691202cd0bbc3bc0f592d37b6a4bd8a7828198384610092565b61046b6101208801357e48c18a515eb7212fa829d19fad606602d5c614c19b50830521d4a613b5adef7f2bf41e7d2a81b2f6d9b7afcf060c5378042bd234ea3bf02b15d7e33717490afc84610092565b6104bc6101408801357f1d79623aa57462efda609ec71d972a1ee11b077f6f0331ee2d8f3e479fa6f3037f0e51b16f7f2f99de84098ebba1f1d3417c7bc9c6a5efa1993396c126e1543b7a84610092565b61050d6101608801357f26541b41faea776f2c39021d7ca86627c5939528301225b1ab82125c5d4d83707f2674561d11378ba989471653ac0beb60fd51587f4b8b7c9b970f81d0117ccf1384610092565b61055e6101808801357f0d2f11e1df72fb415b17f4b37c7f00bf88c6f1687256fc2e1ec2fa610bec9b907f1f1530e92027b80ecd82fa1eeab105f6dd267f0ceb71649ab822fee789ae75f384610092565b6105af6101a08801357f2baff3dca18fd73b6cfeb57356c3f5f080fc4e8295ba9e10f065aed85591d7897f1e8a25a871ef1cb921aecab28e7ca4d955a190e165485166c2b7a6342632eae584610092565b6106006101c08801357f24bf9afa2425faea005bc5cc509eb51d9f648ed24b59dfc1f016fcc8d9eade0d7f1a3774f449f2b1ab74b10b2f786b76a70c7dcffcf42920c2a248aacc6042e09084610092565b6106516101e08801357f2eb2501674bb64ef0efda3b061faa56ad771e55dd4296eb2a0adaa5dc74092d37f1e08792193298dc465a34b5f6147c17773c8deb3c4cef904e1cda6459fd0fa4e84610092565b6106a26102008801357f2ed57b4ab48879bc6a30d2247ba01eff979e049b5522b513cb0abb65f36a8db17f09908ea9fd743c383603eeb038332496671b8514ed31e2705aa8a29dc63e8be684610092565b6106f36102208801357f0c284a7fe138d4cdc90f91bd16cd11331c02dc7f31f53b63d06538f5556b3e127f05fad4fc403de2af20771e759fa2729262c189477cd3d3616d8dce926aa3a5b584610092565b6107446102408801357f2149668511f2da35cb3b5e44d2abb568f819008742c189b4a6bdfd0be56666b17f27d7b535d6a9c83c064ba6c0b29328a1455048cb7c187b4d64df853cb14c81a384610092565b6107956102608801357f01e812a57d6d5026220d869b64d56e415bc0cf9d0b10a994035061f4319d80677f055e94309540a584545a2b1943e1fa6d6f3fa6575e1fdfcd7c46cb9f625dcb9984610092565b6107e66102808801357f0258cce5e15404e5e1b1695dfd58b3a3be26c1a7eef93775f7b3b77b63da11fb7f2d735f27514dc246ed5610045b5417db14fc400ec46bba4a490f28618b1e1f1b84610092565b6108376102a08801357f2e236666fe18ed18253a1d13443c816545c632f44b7ff16880aae4f88d26f7d77f14267c8fff65137d54c38dcdc86443fd8506601db683d68535f3ff94e648accb84610092565b6108876102c08801357f184a4c79ede95722e4bc75a9e2129c68913cf53bf0434afb2401add99c84e37c7ede0d739e1cf434dbe75c21e88c54326e183e9646efd5f9cbd5562a8475157684610092565b6108d86102e08801357f2cf831bff6c50dcf5b3bf4668c774ae002817b5eb91ff7659c6291745fdabdea7f1b45ae2cf143545db9a131f50578847cb5be75d367da42f7d813df838355ff1784610092565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f0e6257a5db6904fc9362fc64722f753fba73d6243d8c3bedae305e24117d72c26102808201527f1c8f31abbe641c7a90edca56ed0b163bf730ab1ccf3482957115bf6d79d82b4c6102a08201527f2e8c92421dbd7a7c91e8fa0e9ea68060bac6c9472f65400981ed3161c89394a36102c08201527f0209b97d171bd97fa11630fe8c4c32fc4582a8b5e855872d7215920acef2f9da6102e08201526020816103008360086107d05a03fa9051169695505050505050565b6040516103808101604052610bd0600084013561005e565b610bdd602084013561005e565b610bea604084013561005e565b610bf7606084013561005e565b610c04608084013561005e565b610c1160a084013561005e565b610c1e60c084013561005e565b610c2b60e084013561005e565b610c3961010084013561005e565b610c4761012084013561005e565b610c5561014084013561005e565b610c6361016084013561005e565b610c7161018084013561005e565b610c7f6101a084013561005e565b610c8d6101c084013561005e565b610c9b6101e084013561005e565b610ca961020084013561005e565b610cb761022084013561005e565b610cc561024084013561005e565b610cd361026084013561005e565b610ce161028084013561005e565b610cef6102a084013561005e565b610cfd6102c084013561005e565b610d0b6102e084013561005e565b610d18818486888a6100fd565b90508060005260206000f35b8060408101831015610d3557600080fd5b92915050565b6000806000806104008587031215610d5257600080fd5b610d5c8686610d24565b935060c0850186811115610d6f57600080fd5b604086019350610d7f8782610d24565b9250508561040086011115610d9357600080fd5b5091949093509091610100019056fea2646970667358221220fff858cb2cb63ef1be9bcf7e749ca5ff1fde80c6245ac2e57238855451d5141b64736f6c634300081b0033";

type MintVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintVerifier__factory extends ContractFactory {
  constructor(...args: MintVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MintVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintVerifier__factory {
    return super.connect(runner) as MintVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintVerifierInterface {
    return new Interface(_abi) as MintVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintVerifier {
    return new Contract(address, _abi, runner) as unknown as MintVerifier;
  }
}
