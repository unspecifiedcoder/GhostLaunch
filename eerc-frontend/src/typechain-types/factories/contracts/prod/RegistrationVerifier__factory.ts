/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RegistrationVerifier,
  RegistrationVerifierInterface,
} from "../../../contracts/prod/RegistrationVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[5]",
        name: "_pubSignals",
        type: "uint256[5]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106d38061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806334baeab914610030575b600080fd5b61004361003e366004610636565b610057565b604051901515815260200160405180910390f35b60006105ba565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001811061008f576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100c5576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa915050806100f6576000805260206000f35b5050505050565b7f0b29acaa3e1da304f54e7eecef47261a768f8fc6e2160e6a2f1a6b44fc89e86085527f1ee475ce829f734d44cf4a106b544aacb107e5f9518ebcdeeec42d9cea2a16b460208601526000608086018661019a87357f1fa3db9eda6054ad613bcd564efff087d9b0726534cce655beafb9294eda4c2d7f0f63a6a9fda31c1baa29dfac9983d5441093cd3821585f7eb889f504cf2dbe1784610092565b6101ea60208801357f2310bf279ed58b4cf463bdf369764c452845353f114fb503f036279c81517a387f2118e76180d9d07274294c2182e4e00958b9fca9db1c51156e85a4b8cde5e1f584610092565b61023a60408801357f01edd94885fde334a93ad5614a1178e8be3eacac519839f30935012fb85ac4467f141bf23f91f84017c1e8171c839bf9bc60724e52dbffcb770bf081930b6becf084610092565b61028a60608801357f22f2fedfa4f37fc17bf1fb6e59b4d952619fb6d4f433c1d57b275d6304f79e1f7f2438920edfaf8a326f3dd563e75866678a547b856c349d96f8a445c76b0a46c584610092565b6102da60808801357f033df12c43f6f746f3e913a35263363b6263ea2ed233b14746ffd30b527eb78b7f2beba3fc770f6f16fd1792c38954a3390402294342d7c7b07dd85c251ed7ab6084610092565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f2bac34bb59141574a43837d52cd642bd1aa67b36d1e64d8f651b21280f5a90696102808201527f063e6147b434ec79290abe706491a3478dddb38f16f7c3ff96631f75fc32b53d6102a08201527f27f1dc2d1412822466ebc0edc3e63cb992bee28401b5f2584fa15910ed2f35026102c08201527f1cb649deb194bc28986e0de52cb4f4f1e608775b0d3879e9b9172a49c462e6876102e08201526020816103008360086107d05a03fa9051169695505050505050565b60405161038081016040526105d2600084013561005e565b6105df602084013561005e565b6105ec604084013561005e565b6105f9606084013561005e565b610606608084013561005e565b610613818486888a6100fd565b90508060005260206000f35b806040810183101561063057600080fd5b92915050565b6000806000806101a0858703121561064d57600080fd5b610657868661061f565b935060c085018681111561066a57600080fd5b60408601935061067a878261061f565b925050856101a08601111561068e57600080fd5b5091949093509091610100019056fea2646970667358221220af48c99a95c93e6c8bb6b4d2767090f33394915a5cf814cccae2b99a06b34c5c64736f6c634300081b0033";

type RegistrationVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrationVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegistrationVerifier__factory extends ContractFactory {
  constructor(...args: RegistrationVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RegistrationVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RegistrationVerifier__factory {
    return super.connect(runner) as RegistrationVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrationVerifierInterface {
    return new Interface(_abi) as RegistrationVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RegistrationVerifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RegistrationVerifier;
  }
}
