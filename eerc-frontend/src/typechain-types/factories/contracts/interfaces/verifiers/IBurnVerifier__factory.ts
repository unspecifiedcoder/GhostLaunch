/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBurnVerifier,
  IBurnVerifierInterface,
} from "../../../../contracts/interfaces/verifiers/IBurnVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pointA_",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "pointB_",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "pointC_",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[19]",
        name: "publicSignals_",
        type: "uint256[19]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "verified_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBurnVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IBurnVerifierInterface {
    return new Interface(_abi) as IBurnVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBurnVerifier {
    return new Contract(address, _abi, runner) as unknown as IBurnVerifier;
  }
}
